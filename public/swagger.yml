swagger: '2.0'
info:
  version: 1.0.0
  title: Avid API
  description: >
    #### Backend for Avid Project
basePath: /
parameters:
  id:
    name: id
    in: path
    description: id
    type: integer
    required: true
definitions:
  Links:
    type: object
  GuardiansCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/GuardiansResource'
  GuardianDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/GuardiansResource'
  GuardiansResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - gaurdian
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Guardian'
      links:
        $ref: '#/definitions/Links'
  Guardian:
    type: object
    properties:
      name:
        type: string
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string
  KidsCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/KidsResource'
  KidDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/KidsResource'
  KidsResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - kid
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Kid'
      links:
        $ref: '#/definitions/Links'
  Kid:
    type: object
    properties:
      name:
        type: string
      gender:
        type: string
      age:
        type: integer
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string
  ActivitiesCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/ActivitiesResource'
  ActivityDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/ActivitiesResource'
  ActivitiesResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - activity
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Activity'
      links:
        $ref: '#/definitions/Links'
  Activity:
    type: object
    properties:
      name:
        type: string
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string
  RelationshipsCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/RelationshipsResource'
  RelationshipDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/RelationshipsResource'
  RelationshipsResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - relationship
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Relationship'
      links:
        $ref: '#/definitions/Links'
  Relationship:
    type: object
    properties:
      gaurdian_id:
        type: integer
      kid_id:
        type: integer
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string
  InterestsCollection:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        type: array
        items:
          $ref: '#/definitions/InterestsResource'
  InterestDocument:
    type: object
    properties:
      links:
        $ref: '#/definitions/Links'
      data:
        $ref: '#/definitions/InterestsResource'
  InterestsResource:
    type: object
    properties:
      type:
        type: string
        enum:
        - interest
      id:
        type: integer
      attributes:
        $ref: '#/definitions/Interest'
      links:
        $ref: '#/definitions/Links'
  Interest:
    type: object
    properties:
      kid_id:
        type: integer
      activity_id:
        type: integer
  Error:
    type: object
    properties:
      error:
        type: array
        items:
          type: object
          properties:
            status:
              type: string
            source:
              type: object
              properties:
                pointer:
                  type: string
            title:
              type: string
            details:
              type: string
paths:
  '/guardians':
    get:
      description: >
        Get all guardians
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GuardiansCollection'
    post:
      description: >
        Posts a new guardian
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GuardianDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - gaurdian
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
  '/guardians/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one guardian
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/GuardiansCollection'
  '/kids':
    get:
      description: >
        Get all kids
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KidsCollection'
    post:
      description: >
        Posts a new kid
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KidDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - kid
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
                      gender:
                        type: string
                      age:
                        type: integer
  '/kids/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one kid
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/KidsCollection'
  '/activities':
    get:
      description: >
        Get all activities
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ActivitiesCollection'
    post:
      description: >
        Posts a new activity
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ActivityDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - kid
                  attributes:
                    type: object
                    properties:
                      name:
                        type: string
  '/activities/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one activity
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/ActivitiesCollection'
  '/relationships':
    get:
      description: >
        Get all relationships
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RelationshipsCollection'
    post:
      description: >
        Posts a new relationship
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RelationshipDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - relationship
                  attributes:
                    type: object
                    properties:
                      gaurdian_id:
                        type: integer
                      kid_id:
                        type: integer
  '/relationships/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one relationship
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/RelationshipsCollection'
  '/interests':
    get:
      description: >
        Get all interests
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterestsCollection'
    post:
      description: >
        Posts a new interest
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterestDocument'
        '400':
          description: Validation error
          schema:
            $ref: '#/definitions/Error'
      parameters:
        - name: Payload
          in: body
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  type:
                    type: string
                    enum:
                    - interest
                  attributes:
                    type: object
                    properties:
                      gaurdian_id:
                        type: integer
                      kid_id:
                        type: integer
  '/interests/{id}':
    get:
      parameters:
        - $ref: '#/parameters/id'
      description: >
        Get one interest
      responses:
        '200':
          description: Success
          schema:
            $ref: '#/definitions/InterestsCollection'
